/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: noe-3d.at (https://sketchfab.com/www.noe-3d.at)
License: CC0-1.0 (http://creativecommons.org/publicdomain/zero/1.0/)
Source: https://sketchfab.com/3d-models/apollo-und-daphne-2d77409f93c249cca9c52a8c54e9607a
Title: Apollo und Daphne
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import apollo from "../assets/3d/apollo_und_daphne.glb"
import { useFrame, useThree } from "@react-three/fiber";

export function Apollo({isRotating,setIsRotating,...props}) {

  const { nodes, materials } = useGLTF(apollo);

  const apolloRef = useRef();

  const {gl,viewport} = useThree();

  const lastX = useRef(0);
  const rotationSpeed = useRef(0);
 const dampingFactor = 0.95;

 useFrame(() => {
    if (isRotating) {
        apolloRef.current.rotation.y += 0.01;
    }
    
});
const isDragging = useRef(false);

useEffect(() => {
    const handlePointerDown = () => {
      isDragging.current = true;
      setIsRotating(false);
    };

    const handlePointerUp = () => {
      isDragging.current = false;
      setIsRotating(true);
    };

    gl.domElement.addEventListener('pointerdown', handlePointerDown);
    gl.domElement.addEventListener('pointerup', handlePointerUp);

    return () => {
      gl.domElement.removeEventListener('pointerdown', handlePointerDown);
      gl.domElement.removeEventListener('pointerup', handlePointerUp);
    };
  }, [gl.domElement]);



  return (
    <group {...props} dispose={null} ref={apolloRef}>
      <group
        position={[0.152, -10.239, 0]}
        rotation={[-0.515, 1.568, -2.624]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials.Apollon_Daphne_O_Material_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_3.geometry}
          material={materials.Apollon_Daphne_O_Material_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={materials.Apollon_Daphne_O_Material_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={materials.Apollon_Daphne_O_Material_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_6.geometry}
          material={materials.Apollon_Daphne_O_Material_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_7.geometry}
          material={materials.Apollon_Daphne_O_Material_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_8.geometry}
          material={materials.Apollon_Daphne_O_Material_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_9.geometry}
          material={materials.Apollon_Daphne_O_Material_u1_v1}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/apollo_und_daphne.glb");
