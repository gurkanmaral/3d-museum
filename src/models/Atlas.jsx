/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Stanley441 (https://sketchfab.com/Stanley441)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/atlas-3a6339fb75614c08a472ac5de6e5dd0d
Title: Atlas
*/

import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import atlas from "../assets/3d/atlas.glb"
import { useFrame, useThree } from "@react-three/fiber";

export function Atlas({isRotating,setIsRotating,...props}) {

  const { nodes, materials } = useGLTF(atlas);


  const atlasRef = useRef();

  const {gl,viewport} = useThree();

  const lastX = useRef(0);
  const rotationSpeed = useRef(0);
 const dampingFactor = 0.95;

 useFrame(() => {
    if (isRotating) {
        atlasRef.current.rotation.y += 0.01;
    }
    
});
const isDragging = useRef(false);

useEffect(() => {
    const handlePointerDown = () => {
      isDragging.current = true;
      setIsRotating(false);
    };

    const handlePointerUp = () => {
      isDragging.current = false;
      setIsRotating(true);
    };

    gl.domElement.addEventListener('pointerdown', handlePointerDown);
    gl.domElement.addEventListener('pointerup', handlePointerUp);

    return () => {
      gl.domElement.removeEventListener('pointerdown', handlePointerDown);
      gl.domElement.removeEventListener('pointerup', handlePointerUp);
    };
  }, [gl.domElement]);



  return (
    <group {...props} dispose={null} ref={atlasRef}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[0.006, 0.573, 0.027]}>
          <primitive object={nodes.Armature_rootJoint} />
          <skinnedMesh
            geometry={nodes.WORK_0.geometry}
            material={materials.Dudebronze}
            skeleton={nodes.WORK_0.skeleton}
          />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Earth_0.geometry}
          material={materials.Marble_earth}
          position={[0.406, -1.329, 8.182]}
          rotation={[0.44, -0.015, 2.754]}
          scale={1.011}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.PodiumLP_0.geometry}
          material={materials.PodiumMarble}
          position={[0.41, 0.046, -6.51]}
          scale={3.408}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/atlas.glb");